console.log('MandarinWays loaded');

document.querySelectorAll('a[href^="#"]').forEach(link => {
    link.addEventListener('click', function(e) {
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            e.preventDefault();
            target.scrollIntoView({ behavior: 'smooth' });
        }
    });
});

// —É–º–µ–Ω—å—à–µ–Ω–∏–µ —à–∞–ø–∫–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
const header = document.querySelector('header');
window.addEventListener('scroll', () => {
    if (window.scrollY > 50) {
        header.classList.add('shrink');
    } else {
        header.classList.remove('shrink');
    }
});

// –ø–æ—è–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('visible');
            observer.unobserve(entry.target);
        }
    });
}, { threshold: 0.1 });

document.querySelectorAll('.fade-section').forEach(sec => observer.observe(sec));

// –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
const themeToggle = document.getElementById('theme-toggle');
if (themeToggle) {
    const stored = localStorage.getItem('theme');
    if (stored === 'dark') {
        document.body.classList.add('dark');
        themeToggle.textContent = '‚òÄÔ∏è';
    }

    themeToggle.addEventListener('click', () => {
        document.body.classList.toggle('dark');
        const isDark = document.body.classList.contains('dark');
        themeToggle.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
}

// –∑–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —Ñ–∏–ª—å—Ç—Ä—ã
const routesContainer = document.getElementById('routes-container');
let routesData = [];
if (routesContainer) {
    fetch('data/routes.json')
        .then(r => r.json())
        .then(data => {
            routesData = data;
            renderRoutes(data);
            const feat = data[0];
            if (feat) {
                const img = document.getElementById('featured-image');
                const title = document.getElementById('featured-title');
                const desc = document.getElementById('featured-desc');
                const price = document.getElementById('featured-price');
                if (img) img.src = feat.image;
                if (title) title.textContent = feat.title;
                if (desc) desc.textContent = feat.description;
                if (price) price.textContent = `–æ—Ç ${feat.price}$`;
            }
        });

    const typeF = document.getElementById('type-filter');
    const daysF = document.getElementById('days-filter');
    const priceF = document.getElementById('price-filter');

    document.getElementById('filters').addEventListener('change', () => {
        const filtered = routesData.filter(r => {
            return (!typeF.value || r.type === typeF.value) &&
                   (!daysF.value || r.days == daysF.value) &&
                   (!priceF.value || r.price <= +priceF.value);
        });
        renderRoutes(filtered);
    });
}

function renderRoutes(data) {
    routesContainer.innerHTML = '';
    data.forEach(r => {
        const art = document.createElement('article');
        art.innerHTML = `
            <img src="${r.image}" alt="${r.title}" loading="lazy">
            <h3>${r.title}</h3>
            <p>${r.description}</p>
            <p class="details">–¶–µ–Ω–∞: –æ—Ç ${r.price}$ ¬∑ ${r.days} –¥–Ω. ¬∑ –õ—É—á—à–∏–π —Å–µ–∑–æ–Ω: ${r.season}</p>
        `;
        routesContainer.appendChild(art);
    });
}

// –æ—Ç–∑—ã–≤—ã
const reviewForm = document.getElementById('review-form');
if (reviewForm) {
    reviewForm.addEventListener('submit', e => {
        e.preventDefault();
        const name = document.getElementById('review-name').value.trim();
        const text = document.getElementById('review-text').value.trim();
        const rating = document.getElementById('review-rating').value;
        if (!name || !text) return;
        const art = document.createElement('article');
        art.className = 'review';
        art.innerHTML = `<p>"${text}" ‚Äî ${name}, —Ä–µ–π—Ç–∏–Ω–≥ ${rating}/5</p>`;
        reviewForm.before(art);
        reviewForm.reset();
    });
}

// –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
const translations = {
    en: {
        menu: ['About', 'Features', 'Goal', 'Routes', 'Places', 'Reviews', 'FAQ', 'Status'],
        heroTitle: 'Mandarin Path',
        heroText: 'Curated tours across China'
    },
    zh: {
        menu: ['ÂÖ≥‰∫é', 'ÁâπËâ≤', 'ÁõÆÊ†á', 'Ë∑ØÁ∫ø', 'Âú∞ÁÇπ', 'ËØÑ‰ª∑', 'FAQ', 'Áä∂ÊÄÅ'],
        heroTitle: 'Ê©òÂ≠ê‰πãË∑Ø',
        heroText: 'Á≤æÂøÉÁ≠ñÂàíÁöÑ‰∏≠ÂõΩÊóÖË°åÁ∫øË∑Ø'
    },
    ru: {
        menu: ['–û –ø—Ä–æ–µ–∫—Ç–µ', '–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏', '–¶–µ–ª—å', '–ú–∞—Ä—à—Ä—É—Ç—ã', '–ú–µ—Å—Ç–∞', '–û—Ç–∑—ã–≤—ã', 'FAQ', '–°—Ç–∞—Ç—É—Å'],
        heroTitle: '–ü—É—Ç—å –ú–∞–Ω–¥–∞—Ä–∏–Ω–∞',
        heroText: '–ê–≤—Ç–æ—Ä—Å–∫–∏–µ —Ç—É—Ä—ã –ø–æ –ö–∏—Ç–∞—é, —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Å –ª—é–±–æ–≤—å—é'
    }
};
const langBtn = document.getElementById('lang-toggle');
if (langBtn) {
    let current = localStorage.getItem('lang') || 'ru';
    applyLang(current);
    langBtn.addEventListener('click', () => {
        current = current === 'ru' ? 'en' : current === 'en' ? 'zh' : 'ru';
        applyLang(current);
        localStorage.setItem('lang', current);
    });
}

function applyLang(lang) {
    const t = translations[lang];
    const menuItems = document.querySelectorAll('.menu li a');
    menuItems.forEach((a, i) => {
        a.textContent = t.menu[i];
    });
    document.querySelector('.hero h2').textContent = t.heroTitle;
    document.querySelector('.hero p').textContent = t.heroText;
    if (lang === 'ru') {
        langBtn.textContent = 'EN';
    } else if (lang === 'en') {
        langBtn.textContent = '‰∏≠Êñá';
    } else {
        langBtn.textContent = 'RU';
    }
}

// –∫–Ω–æ–ø–∫–∞ "–Ω–∞–≤–µ—Ä—Ö"
const scrollBtn = document.getElementById('scroll-top');
if (scrollBtn) {
    window.addEventListener('scroll', () => {
        if (window.scrollY > 400) {
            scrollBtn.classList.add('show');
        } else {
            scrollBtn.classList.remove('show');
        }
    });
    scrollBtn.addEventListener('click', () => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
}
